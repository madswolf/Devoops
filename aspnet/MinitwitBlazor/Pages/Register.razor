@page "/register"
@inject HttpClient http
@using Minitwit.Models.DTO

<h2>Sign Up</h2>
  @*add error handling*@
<form action="" method=post onsubmit=@register>
    <dl>
        <dt>Username:</dt>
        <dd><input type=text @bind="@username" @oninput="@((e) => { username=e.Value.ToString();})" name=username size=30></dd>
        <dt>E-Mail:</dt>
        <dd><input type=text @bind="@email" @oninput="@((e) => { email=e.Value.ToString();})" name=email size=30></dd>
        <dt>Password:</dt>
        <dd><input type=password @bind="@pwd" @oninput="@((e) => { pwd=e.Value.ToString();})" name=password size=30></dd>
        <dt>Password <small>(repeat)</small>:</dt>
        <dd><input type=password @bind="@pwdRepeat" @oninput="@((e) => { pwdRepeat=e.Value.ToString();})" name=password2 size=30></dd>
    </dl>
    <div class=actions><input type=submit value="Sign Up"></div>
</form>

@code {
    private string username {get;set;}
    private string email {get;set;}
    private string pwd {get;set;}
    private string pwdRepeat {get;set;}

    private async void register(){
        if (pwd.Equals(pwdRepeat))
        {
            var register = new UserRegistrationDTO
                {
                    username = username,
                    pwd = pwd,
                    email = email
                };
            await http.PostAsJsonAsync("/users/register", register);
        }
    }
}
